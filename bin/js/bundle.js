var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 480;
    GameConfig.height = 800;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var GameBgMap_1 = require("./logic/GameBgMap");
var GamePanel = /** @class */ (function () {
    function GamePanel() {
        /**
         * 0 idl
         * 1 enter
         * 2 exit
         */
        this.curState = 0;
        this.init();
    }
    GamePanel.prototype.init = function () {
        this._view = fairygui.UIPackage.createObject("Game", "Game").asCom;
        this._view.setSize(GameConfig_1.default.width, GameConfig_1.default.height);
    };
    GamePanel.prototype.onEnter = function () {
        if (this.curState === 1)
            return;
        this.curState = 1;
        fairygui.GRoot.inst.addChild(this._view);
        this.initMap();
    };
    GamePanel.prototype.onExit = function () {
        if (this.curState === 2)
            return;
        this.curState = 2;
        fairygui.GRoot.inst.removeChild(this._view);
    };
    GamePanel.prototype.initMap = function () {
        var map1 = this._view.getChild('n0').asCom;
        var map2 = this._view.getChild('n1').asCom;
        if (!this.mapLogic) {
            this.mapLogic = new GameBgMap_1.default(map1, map2);
        }
        this.mapLogic.runMap();
    };
    return GamePanel;
}());
exports.default = GamePanel;
},{"./GameConfig":1,"./logic/GameBgMap":5}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Loader = laya.net.Loader;
var UIMgr_1 = require("./utils/UIMgr");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        // GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);
        Laya.loader.load([{
                url: 'res/Login_atlas0.png', type: Loader.IMAGE
            }, {
                url: 'res/Login.fui', type: Loader.BUFFER
            }, {
                url: 'res/Game_atlas0.png', type: Loader.IMAGE
            }, {
                url: 'res/Game.fui', type: Loader.BUFFER
            }], Laya.Handler.create(this, this.onLoaded));
    };
    Main.prototype.onLoaded = function () {
        Laya.stage.addChild(fairygui.GRoot.inst.displayObject);
        fairygui.UIPackage.addPackage("res/Login");
        fairygui.UIPackage.addPackage("res/Game");
        // UIMgr.Instance().enterLogin();
        UIMgr_1.default.Instance().enterGame();
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./utils/UIMgr":7}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var MusicWin_1 = require("./ui/MusicWin");
var MainPanel = /** @class */ (function () {
    function MainPanel() {
        /**
         * 0 idl
         * 1 enter
         * 2 exit
         */
        this.curState = 0;
        this.init();
    }
    MainPanel.prototype.init = function () {
        this._view = fairygui.UIPackage.createObject("Login", "Login").asCom;
        this._view.setSize(GameConfig_1.default.width, GameConfig_1.default.height);
        this.bindBtn(this._view);
    };
    MainPanel.prototype.bindBtn = function (view) {
        var _this = this;
        view.getChild("n1").onClick(this, function (data) {
            //
            console.log(data);
        });
        view.getChild("musicBtn").onClick(this, function (data) {
            if (!_this.audioWin) {
                _this.audioWin = new MusicWin_1.default();
            }
            _this.audioWin.show();
        });
    };
    MainPanel.prototype.onEnter = function () {
        if (this.curState === 1)
            return;
        this.curState = 1;
        fairygui.GRoot.inst.addChild(this._view);
    };
    MainPanel.prototype.onExit = function () {
        if (this.curState === 2)
            return;
        this.curState = 2;
        fairygui.GRoot.inst.removeChild(this._view);
    };
    return MainPanel;
}());
exports.MainPanel = MainPanel;
},{"./GameConfig":1,"./ui/MusicWin":6}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameBgMap = /** @class */ (function () {
    function GameBgMap(map1, map2) {
        this.speed = 2;
        this.map1 = map1;
        this.map2 = map2;
        this.mapHeigth = this.map1.height;
        this.mapStartY = map1.y;
    }
    GameBgMap.prototype.runMap = function () {
        Laya.timer.loop(16, this, this.moveYUpdate);
    };
    GameBgMap.prototype.moveYUpdate = function () {
        this.runMoveY(this.map1, this.speed);
        this.runMoveY(this.map2, this.speed);
        if (this.isTransform(this.map1, this.map2)) {
            this.transform(this.map1, this.map2);
        }
        if (this.isTransform(this.map2, this.map1)) {
            this.transform(this.map2, this.map1);
        }
    };
    GameBgMap.prototype.runMoveY = function (target, offsetY) {
        target.y += -offsetY;
    };
    GameBgMap.prototype.isTransform = function (map1, map2) {
        console.log(map1.y, map2.y);
        if (map1.y <= (this.mapStartY - this.mapHeigth) &&
            map2.y <= this.mapStartY) {
            return true;
        }
        return false;
    };
    GameBgMap.prototype.transform = function (map1, map2) {
        map1.y = map2.y + this.mapHeigth;
    };
    return GameBgMap;
}());
exports.default = GameBgMap;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MusicWin = /** @class */ (function (_super) {
    __extends(MusicWin, _super);
    function MusicWin() {
        return _super.call(this) || this;
    }
    MusicWin.prototype.onInit = function () {
        this.contentPane = fairygui.UIPackage.createObject("Login", "AudioWin").asCom;
        this.center();
        this.contentPane.getChild("musicSwitch").onClick(this, this.onEventMusic);
        this.contentPane.getChild("effectSwitch").onClick(this, this.onEventEffeck);
        this.contentPane.getChild("closeBtn").onClick(this, this.onEventClose);
    };
    MusicWin.prototype.onShown = function () {
        console.log(0);
    };
    MusicWin.prototype.onEventMusic = function (event) {
        console.log(0);
    };
    MusicWin.prototype.onEventEffeck = function (event) {
        console.log(0);
    };
    MusicWin.prototype.onEventClose = function (event) {
        this.hide();
    };
    return MusicWin;
}(fairygui.Window));
exports.default = MusicWin;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainPanel_1 = require("../MainPanel");
var GamePanel_1 = require("../GamePanel");
var UIMgr = /** @class */ (function () {
    function UIMgr() {
    }
    UIMgr.Instance = function () {
        if (!UIMgr.instance) {
            UIMgr.instance = new UIMgr();
        }
        return UIMgr.instance;
    };
    UIMgr.prototype.enterLogin = function () {
        if (!this.loginPanel) {
            this.loginPanel = new MainPanel_1.MainPanel();
        }
        this.loginPanel.onEnter();
        if (this.gamePanel) {
            this.gamePanel.onExit();
        }
    };
    UIMgr.prototype.enterGame = function () {
        if (!this.gamePanel) {
            this.gamePanel = new GamePanel_1.default();
        }
        this.gamePanel.onEnter();
        if (this.loginPanel) {
            this.loginPanel.onExit();
        }
    };
    return UIMgr;
}());
exports.default = UIMgr;
},{"../GamePanel":2,"../MainPanel":4}]},{},[3])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
